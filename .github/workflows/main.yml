name: oxid module tests

on: [push]

jobs:
  codestyle_checks:
    strategy:
      matrix:
        php: [ 7.3, 7.4 ] # [7.1, 7.2]
        oxid: [ 6.2 ]
    runs-on: ubuntu-latest
    container:
      image: oxidprojects/oxid-apache-php:oxid${{ matrix.oxid }}-php${{ matrix.php }}
    steps:
      - uses: actions/checkout@v1
      - name: Validate composer.json
        run: composer validate
      - name: validate php syntax
        run: find . -not -path "./vendor/*" -name "*.php" -print0 | xargs -0 -n1 -P8 php -l
      - name: phive install
        run: phive install
      - name: run code checks
        run: tools/php-cs-fixer fix --dry-run --diff-format=udiff .
  install:
    strategy:
      matrix:
        php: [ 7.3, 7.4 ] # [7.1, 7.2]
        oxid: [ 6.2 ] # [
    runs-on: ubuntu-latest
    container:
      image: oxidprojects/oxid-apache-php:oxid${{ matrix.oxid }}-php${{ matrix.php }}
    env:
      MODULE_NAME: oxid-professional-services/password-policy
    steps:
      - uses: actions/checkout@v1

      - name: install
        run: composer create-project oxid-professional-services/test-oxid /__w/oxid --no-interaction -s dev --repository="{\"url\":\"https://github.com/keywan-ghadami-oxid/test-oxid.git\", \"type\":\"vcs\"}" --remove-vcs

      - name: move artifacts to projects folder
        run: |
          mkdir -p /__w/oxid/project-modules/module-under-test && cp -r * /__w/oxid/project-modules/module-under-test
      - name: add project module folder
        run:
          composer config repositories.build path /__w/oxid/project-modules/\*
        working-directory: /__w/oxid

      - name: require module
        run: cd /__w/oxid && composer require --no-interaction $MODULE_NAME
        working-directory: /__w/oxid

      - name: move config to source folder
        run: cp config.inc.php-dist source/config.inc.php
        working-directory: /__w/oxid

      - name: zip temp artifact
        run: tar czf oxid.tar.gz --directory /__w oxid

      - name: Upload oxid-with-deps
        uses: actions/upload-artifact@v2
        with:
          name: oxid${{ matrix.oxid }}-php${{ matrix.php }}-with-deps
          path: oxid.tar.gz

  unit_tests:
    strategy:
      matrix:
        php: [ 7.3, 7.4 ] # [7.1, 7.2]
        oxid: [ 6.2 ]
    runs-on: ubuntu-latest
    needs: install
    container:
      image: oxidprojects/oxid-apache-php:oxid${{ matrix.oxid }}-php${{ matrix.php }}
    steps:
      - uses: actions/checkout@v1
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: oxid${{ matrix.oxid }}-php${{ matrix.php }}-with-deps
      - name: extract temp artifact
        run: |
          tar xzf oxid.tar.gz && mv oxid /__w
      - name: prepare autoload
        run: |
          bin/symlinkProjectModules.sh
          bin/createModuleAutoload.sh
        working-directory: /__w/oxid

      - name: run unit tests
        run: vendor/bin/phpunit --testsuite unit-tests
        working-directory: /__w/oxid

  integration_tests:
    strategy:
      matrix:
        php: [ 7.3, 7.4 ] # [7.1, 7.2]
        oxid: [ 6.2 ]
    runs-on: ubuntu-latest
    needs: install
    container:
      image: oxidprojects/oxid-apache-php:oxid6.2-php7.4
    env:
      DB_NAME: oxid
      DB_HOST: db
      DB_USER: root
      DB_PASS: root
    services:
      db:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: oxid
        ports:
          - 3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    steps:
      - uses: actions/checkout@v1
      - name: Download a single artifact
        uses: actions/download-artifact@v2
        with:
          name: oxid${{ matrix.oxid }}-php${{ matrix.php }}-with-deps

      - name: extract temp artifact
        run: |
          tar xzf oxid.tar.gz && mv oxid /__w
      - name: prepare autoload
        run: |
          bin/symlinkProjectModules.sh
          bin/createModuleAutoload.sh
        working-directory: /__w/oxid

      - name: prepare db dump
        run: |
          composer ci:prep:db
          composer ci:prep:integration
        working-directory: /__w/oxid

      - name: run integration tests
        run: vendor/bin/phpunit --prepend source/bootstrap.php --testsuite integration-tests
        working-directory: /__w/oxid